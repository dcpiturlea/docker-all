EXEMPLU PENTRU FOLDERUL DIN ACEST PROIECT...Aplicatia JAR este fake
hello-docker = imagine
iotech_8085 = imagine

o singura data:
# tutorial exemplu(nodeJS): https://www.youtube.com/watch?v=pTFZFxd4hOI
1. instalare docker windows: https://docs.docker.com/docker-for-windows/install/
2. instalare kernel linux pe windows: https://docs.microsoft.com/ro-ro/windows/wsl/install-win10#step-4---download-the-linux-kernel-update-package
3. verificare versiune docker: docker version
---pentru eroare aparuta in acest punc(https://stackoverflow.com/questions/40459280/docker-cannot-start-on-windows) trebuie deschisa aplicatia docker si pornit "engine"

pentru fiecare containerizare:
!!!instalare imagine pentru tipul aplicatiei: https://hub.docker.com/  
Ex: imagine docker pentru node, java, linux, etc
Ex java: https://hub.docker.com/_/openjdk


1. creare folder pentru docker
2. copiere aplicatie in locatia curenta
3. creare fisier fara extensie cu numele "Dockerfile" cu textul de mai jos:
  #aici practic ii dam lui docker informatiile necesare pentru a crea o imagine
  
  FROM openjdk:8-jdk-alpine
  ADD ioTech_ecran.jar ioTech_ecran.jar
  EXPOSE 8085  # portul spring. Trebuie sa fie identic cu cel setat in app in application.properties: server.port=8085
  ENTRYPOINT ["java","-jar","/ioTech_ecran.jar"]
  # folosim pentru run: docker run -p 8085:8085 hello-docker
  
  #####V2. NU functioneaza cum trebuie:#####
    FROM openjdk:8-jdk-alpine
    ARG JAR_FILE=target/*.jar
    COPY ${ioTech_ecran.jar} ioTech_ecran.jar
    ENTRYPOINT ["java","-jar","/ioTech_ecran.jar"]
  #info punct 3:
  (java trebuie inlocuit cu imaginea potrivita. 
   iotech.jar trebuie inlocuit cu app dumneavoastra)
 
4. din cmd(current directory): docker build -t hello-docker .
5. pentru verificare daca a fost adaugata imaginea: docker images
6. rulare: docker run hello-docker




comenzi:
1. stergere imagine specifica: docker rmi Image hello-docker
2. stergere totala de containere,imagini, etc: docker system prune
3. lista containere care ruleaza: docker ps
4. pauza: docker pause 6231c74c124a #unde 6231c74c124a  este id-ul CONTAINERULUI
5. reluare dupa pauza: docker unpause 6231c74c124a
6. stop: docker stop 6231c74c124a
7. reluare dupa stop: docker start 6231c74c124a
8. oprire docker service: sudo service docker stop
9. pornire docker service: sudo service docker start
10. stergere totala orice imagine, etc: docker system prune -a --volumes
11. pornire automata docker la restartare ubuntu: sudo systemctl enable docker
12. pornire container automat la restartare ubuntu: docker run -dit --restart unless-stopped iotech_ecran

export(salvare) si import pe alta masina
!!! mutare prin docker, trebuie facut cont aici: https://labs.play-with-docker.com/ !!!
1. salvare imagine docker in local:  docker save --output="C:\users\aceasta\este\locatia\iotech_8085.tar" 6231c74c124a
2. incarcare din masina2(ex vps): docker load --input iotech.tar
3. redenumire imagine, daca aceasta este NONE: Docker tag new_repository:new_tag
4. redenumire imagine, la fel ca in 3: docker image tag d583c3ac45fd iotech_8085/iotech_8085

instalare docker pe ubuntu(digial ocean ex):  https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-ubuntu-20-04
1. dezinstalare versiune veche(daca exista): sudo apt-get remove docker docker-engine docker.io containerd runc
2. sudo apt install apt-transport-https ca-certificates curl software-properties-common
3. curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
4. sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
5. sudo apt update
6. apt-cache policy docker-ce
7. instalare docker: sudo apt install docker-ce
8. verificare daca ruleaza: sudo systemctl status docker
9. 

